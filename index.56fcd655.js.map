{"mappings":"AA0EA,MAAMA,EAAMC,SAASC,cAAc,eAC7BC,EAAiBF,SAASC,cAAc,cACxCE,EAAaH,SAASC,cAAc,aACpCG,EAAkBJ,SAASC,cAAc,oBACzCI,EAAWL,SAASC,cAAc,yBAExCF,EAAIO,iBACF,SAQAC,UACE,IACE,MAAMC,QA1FZD,iBACE,MAMME,EAFU,CAHd,2FAEA,yGAG8BC,KAAIH,MAAMI,UACjBC,MAAM,GAAGD,MAChBE,SAIlB,aADoBC,QAAQC,IAAIN,GA8ERO,GACpBC,QAAQC,IAAIV,GACZ,MAAMW,EAQZ,SAAyBX,GACvB,MAAMY,EAAYZ,EAAM,GAAGa,QACrBC,EAAad,EAAM,GAAGe,OAI5B,OAHAN,QAAQC,IAAIE,GACZH,QAAQC,IAAII,GAELF,EACJV,KACC,EAACc,eACCA,EAAcC,YACdA,EAAWC,cACXA,EAAaC,UACbA,EAASC,aACTA,EAAYC,eACZA,EAAcC,GACdA,KAGO,6EACoCL,qCAA+CK,oEAGtFN,GAAkCE,sEAI7BJ,EAAWS,QAAO,CAACC,EAAWC,KAC7BN,EAAUO,SAASD,EAAMH,KAC3BE,EAAUG,KAAK,IAAIF,EAAMG,QAEpBJ,IACN,iDAGDJ,EACIA,EAAaS,MAAM,EAAG,GACtBR,EAAeQ,MAAM,EAAG,yDAOrCC,KAAK,IAnDWC,CAAgB/B,GAC/BN,EAAesC,mBAAmB,aAAcrB,GAChD,MAAOsB,GACPxB,QAAQC,IAAIuB,EAAMC,aAmDxBxC,EAAeI,iBAAiB,SAGhC,SAAqBqC,GAInB,GAHAvC,EAAgBwC,UAAY,GAC5B3B,QAAQC,IAAIyB,EAAME,QAClB5B,QAAQC,IAAIyB,EAAMG,gBACbH,EAAME,OAAOE,QAAQjB,GACxB,OAEAb,QAAQC,IAAIyB,EAAME,OAAOE,QAAQjB,IA5IrCvB,eAA8ByC,GAC5B,MAAMC,EAAM,sCAAsCD,4DAClD/B,QAAQC,IAAI+B,GACZ,MAAMC,QAAiBtC,MAAMqC,GAE7B,aADoBC,EAASrC,OAyI3BsC,CAAeR,EAAME,OAAOE,QAAQjB,IACjCsB,MAAKC,IAEJ,GADApC,QAAQC,IAAImC,IACPA,EACH,OAAOC,MAAM,kDACR,CACL,MAAMnC,EAShB,SAAwBkC,GACtB,MAAME,aACJA,EAAYC,WACZA,EAAUjC,OACVA,EAAMC,eACNA,EAAcC,YACdA,EAAWC,cACXA,EAAa+B,WACbA,EAAUC,SACVA,GACEL,EAGJ,OAFApC,QAAQC,IAAIK,GAEL,mFAC0CE,qIAGvCD,GAAkCE,4JAKP6B,OAAkBC,+JAIlBC,mKAK3BjC,GAAkCE,0JAMlCH,EAASA,EAAOb,KAAIuB,GAASA,EAAMG,OAAQ,6HAIZsB,sCAlDlBC,CAAeN,GAC9BlD,EAAWyD,UAAUC,OAAO,aAC5BzD,EAAgBoC,mBAAmB,YAAarB,OAGnD2C,OAAMrB,GAASxB,QAAQC,IAAIuB,QArBlCpC,EAASC,iBAAiB,SAuE1B,WAEEH,EAAWyD,UAAUG,IAAI","sources":["src/index.js"],"sourcesContent":["const KEY_API = '024bf82d4805f650033dc69997860333';\nasync function fetchFilmsCards() {\n  const festFetch =\n    'https://api.themoviedb.org/3/trending/movie/day?api_key=024bf82d4805f650033dc69997860333';\n  const secondFetch =\n    'https://api.themoviedb.org/3/genre/movie/list?api_key=024bf82d4805f650033dc69997860333&language=en-US';\n  const dateIds = [festFetch, secondFetch];\n\n  const arrayOfPromises = dateIds.map(async userId => {\n    const response = await fetch(`${userId}`);\n    return response.json();\n  });\n\n  const dates = await Promise.all(arrayOfPromises);\n  return dates;\n}\n\nasync function fetchFilmModal(movie_id) {\n  const url = `https://api.themoviedb.org/3/movie/${movie_id}?api_key=024bf82d4805f650033dc69997860333&language=en-US`;\n  console.log(url);\n  const response = await fetch(url);\n  const movie = await response.json();\n  return movie;\n}\n\n// async function fetchgenre() {\n//   const response = await fetch(\n//     'https://api.themoviedb.org/3/genre/movie/list?api_key=024bf82d4805f650033dc69997860333&language=en-US'\n//   );\n//   const genresJson = await response.json();\n//   return genresJson;\n// }\n\n// let geners;\n\n// const doStuff = async () => {\n//   try {\n//     geners = await fetchgenre();\n//     console.log(geners);\n//   } catch (error) {\n//     console.log(error.message);\n//   }\n// };\n\n// doStuff();\n\n// function fetchAllFilms() {\n//   return fetch(\n//     'https://api.themoviedb.org/3/trending/all/day?api_key=024bf82d4805f650033dc69997860333'\n//   ).then(response => {\n//     if (!response.ok) {\n//       throw new Error(response.status);\n//     }\n//     return response.json();\n//   });\n// }\n\n// function genreFilms() {\n//   return fetch(\n//     'https://api.themoviedb.org/3/genre/movie/list?api_key=024bf82d4805f650033dc69997860333&language=en-US'\n//   ).then(response => {\n//     if (!response.ok) {\n//       throw new Error(response.status);\n//     }\n//     return response.json();\n//   });\n// }\n\n// genreFilms()\n//   .then(genres => {\n//     console.log(genres);\n//   })\n//   .catch(error => console.log(error));\n\nconst btn = document.querySelector('.button_all');\nconst filmsContainer = document.querySelector('.films_all');\nconst backdropEl = document.querySelector('.backdrop');\nconst modalFilmInfoEl = document.querySelector('.modal_film-info');\nconst btnModal = document.querySelector('.modal__button--close');\n\nbtn.addEventListener(\n  'click',\n  // () => {\n  //   fetchAllFilms()\n  //     .then(films => {\n  //       const markup = randerFilms(films);\n  //       filmsContainer.insertAdjacentHTML('beforebegin', markup);\n  //     })\n  //     .catch(error => console.log(error));\n  async () => {\n    try {\n      const dates = await fetchFilmsCards();\n      console.log(dates);\n      const markup = createFilmsList(dates);\n      filmsContainer.insertAdjacentHTML('afterbegin', markup);\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n);\n\nfunction createFilmsList(dates) {\n  const filmArray = dates[0].results;\n  const genreArray = dates[1].genres;\n  console.log(filmArray);\n  console.log(genreArray);\n\n  return filmArray\n    .map(\n      ({\n        original_title,\n        poster_path,\n        original_name,\n        genre_ids,\n        release_date,\n        first_air_date,\n        id,\n      }) => {\n        // console.log(`${original_title}`);\n        return `<div class=\"film-card\">\n        <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" alt=\"\" loading=\"lazy\"  data-id=${id} />\n        <div class=\"info\">\n          <p class=\"film-name\">${\n            original_title ? original_title : original_name\n          }\n          </p>\n          <p class=\"info-item\">\n            <b>${genreArray.reduce((listGenre, genre) => {\n              if (genre_ids.includes(genre.id)) {\n                listGenre.push(` ${genre.name}`);\n              }\n              return listGenre;\n            }, [])}</b>\n            <b>|</b>\n            <b>${\n              release_date\n                ? release_date.slice(0, 4)\n                : first_air_date.slice(0, 4)\n            }</b>\n          </p>\n        </div>\n      </div>`;\n      }\n    )\n    .join('');\n}\n\nfilmsContainer.addEventListener('click', onFilmClick);\nbtnModal.addEventListener('click', onBtnModalClick);\n\nfunction onFilmClick(event) {\n  modalFilmInfoEl.innerHTML = '';\n  console.log(event.target);\n  console.log(event.currentTarget);\n  if (!event.target.dataset.id) {\n    return;\n  } else {\n    console.log(event.target.dataset.id);\n    fetchFilmModal(event.target.dataset.id)\n      .then(movie => {\n        console.log(movie);\n        if (!movie) {\n          return alert('The resource you requested could not be found.');\n        } else {\n          const markup = createFilmCard(movie);\n          backdropEl.classList.remove('is-hidden');\n          modalFilmInfoEl.insertAdjacentHTML('beforeend', markup);\n        }\n      })\n      .catch(error => console.log(error));\n  }\n}\n\nfunction createFilmCard(movie) {\n  const {\n    vote_average,\n    vote_count,\n    genres,\n    original_title,\n    poster_path,\n    original_name,\n    popularity,\n    overview,\n  } = movie;\n  console.log(genres);\n\n  return `<div class=\"about_film-card\">\n        <img src=\"https://image.tmdb.org/t/p/w500${poster_path}\" class=\"about_film-img\" alt=\"\" loading=\"lazy\"  />\n        <div class=\"about_film-info\">\n          <h1 class=\"about_film-name\">${\n            original_title ? original_title : original_name\n          }\n          </h1>\n          <div class=\"about_film-item\">\n          <p class=\"about_film-text\">Vote / Votes</p>\n          <b class=\"about_film-date\">${vote_average} / ${vote_count}</b>\n          </div>\n          <div class=\"about_film-item\">\n          <p class=\"about_film-text\">Popularity</p>\n          <b class=\"about_film-date\">${popularity}</b>\n          </div>\n          <div class=\"about_film-item\">\n          <p class=\"about_film-text\">Original Title</p>\n          <b class=\"about_film-date\">${\n            original_title ? original_title : original_name\n          }</b>\n          </div>\n          <div class=\"about_film-item\">\n          <p class=\"about_film-text\">Genre</p>\n          <b class=\"about_film-date\">${\n            genres ? genres.map(genre => genre.name) : ' '\n          }</b>\n          </div>\n          <h2 class=\"about_film-pretitle\">ABOUT</h2>\n          <p class=\"about_film-overview\">${overview}</p>\n        </div>\n      </div>`;\n}\n\nfunction onBtnModalClick() {\n  // filmsContainer.removeEventListener('click', onFilmClick);\n  backdropEl.classList.add('is-hidden');\n}\n"],"names":["$1f0dc3b9307be026$var$btn","document","querySelector","$1f0dc3b9307be026$var$filmsContainer","$1f0dc3b9307be026$var$backdropEl","$1f0dc3b9307be026$var$modalFilmInfoEl","$1f0dc3b9307be026$var$btnModal","addEventListener","async","dates","arrayOfPromises","map","userId","fetch","json","Promise","all","$1f0dc3b9307be026$var$fetchFilmsCards","console","log","markup","filmArray","results","genreArray","genres","original_title","poster_path","original_name","genre_ids","release_date","first_air_date","id","reduce","listGenre","genre","includes","push","name","slice","join","$1f0dc3b9307be026$var$createFilmsList","insertAdjacentHTML","error","message","event","innerHTML","target","currentTarget","dataset","movie_id","url","response","$1f0dc3b9307be026$var$fetchFilmModal","then","movie","alert","vote_average","vote_count","popularity","overview","$1f0dc3b9307be026$var$createFilmCard","classList","remove","catch","add"],"version":3,"file":"index.56fcd655.js.map"}